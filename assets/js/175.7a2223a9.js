(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{521:function(s,a,t){"use strict";t.r(a);var e=t(4),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("学习不走弯路，"),a("a",{attrs:{href:"#%E5%85%AC%E4%BC%97%E5%8F%B7"}},[s._v("关注公众号")]),s._v(" 回复「学习路线」，获取mall项目专属学习路线！")]),s._v(" "),a("h1",{attrs:{id:"spring-cloud-sleuth-分布式请求链路跟踪"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-sleuth-分布式请求链路跟踪"}},[s._v("#")]),s._v(" Spring Cloud Sleuth：分布式请求链路跟踪")]),s._v(" "),a("blockquote",[a("p",[s._v("Spring Cloud Sleuth 是分布式系统中跟踪服务间调用的工具，它可以直观地展示出一次请求的调用过程，本文将对其用法进行详细介绍。")])]),s._v(" "),a("h2",{attrs:{id:"spring-cloud-sleuth-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-sleuth-简介"}},[s._v("#")]),s._v(" Spring Cloud Sleuth 简介")]),s._v(" "),a("p",[s._v("随着我们的系统越来越庞大，各个服务间的调用关系也变得越来越复杂。当客户端发起一个请求时，这个请求经过多个服务后，最终返回了结果，经过的每一个服务都有可能发生延迟或错误，从而导致请求失败。这时候我们就需要请求链路跟踪工具来帮助我们，理清请求调用的服务链路，解决问题。")]),s._v(" "),a("h2",{attrs:{id:"给服务添加请求链路跟踪"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#给服务添加请求链路跟踪"}},[s._v("#")]),s._v(" 给服务添加请求链路跟踪")]),s._v(" "),a("blockquote",[a("p",[s._v("我们将通过user-service和ribbon-service之间的服务调用来演示该功能，这里我们调用ribbon-service的接口时，ribbon-service会通过RestTemplate来调用user-service提供的接口。")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("首先给user-service和ribbon-service添加请求链路跟踪功能的支持；")])]),s._v(" "),a("li",[a("p",[s._v("在user-service和ribbon-service中添加相关依赖：")])])]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.springframework.cloud"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("spring-cloud-starter-zipkin"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("修改application.yml文件，配置收集日志的zipkin-server访问地址：")])]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("zipkin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("base-url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9411")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("sleuth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("sampler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("probability")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置Sleuth的抽样收集概率")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"整合zipkin获取及分析日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整合zipkin获取及分析日志"}},[s._v("#")]),s._v(" 整合Zipkin获取及分析日志")]),s._v(" "),a("blockquote",[a("p",[s._v("Zipkin是Twitter的一个开源项目，可以用来获取和分析Spring Cloud Sleuth 中产生的请求链路跟踪日志，它提供了Web界面来帮助我们直观地查看请求链路跟踪信息。")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("SpringBoot 2.0以上版本已经不需要自行搭建zipkin-server，我们可以从该地址下载zipkin-server：https://repo1.maven.org/maven2/io/zipkin/java/zipkin-server/2.12.9/zipkin-server-2.12.9-exec.jar")])]),s._v(" "),a("li",[a("p",[s._v("下载完成后使用以下命令运行zipkin-server：")])])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("java")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-jar")]),s._v(" zipkin-server-2.12.9-exec.jar\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("Zipkin页面访问地址：http://localhost:9411")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/mall/springcloud_sleuth_01.png",alt:""}})]),s._v(" "),a("ul",[a("li",[s._v("启动eureka-sever，ribbon-service，user-service：")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/mall/springcloud_sleuth_02.png",alt:""}})]),s._v(" "),a("ul",[a("li",[s._v("多次调用（Sleuth为抽样收集）ribbon-service的接口"),a("a",{attrs:{href:"http://localhost:8301/user/1",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://localhost:8301/user/1"),a("OutboundLink")],1),s._v(" ，调用完后查看Zipkin首页发现已经有请求链路跟踪信息了；")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/mall/springcloud_sleuth_03.png",alt:""}})]),s._v(" "),a("ul",[a("li",[s._v("点击查看详情可以直观地看到请求调用链路和通过每个服务的耗时：")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/mall/springcloud_sleuth_04.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"使用elasticsearch存储跟踪信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用elasticsearch存储跟踪信息"}},[s._v("#")]),s._v(" 使用Elasticsearch存储跟踪信息")]),s._v(" "),a("blockquote",[a("p",[s._v("如果我们把zipkin-server重启一下就会发现刚刚的存储的跟踪信息全部丢失了，可见其是存储在内存中的，有时候我们需要将所有信息存储下来，这里以存储到Elasticsearch为例，来演示下该功能。")])]),s._v(" "),a("h3",{attrs:{id:"安装elasticsearch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装elasticsearch"}},[s._v("#")]),s._v(" 安装Elasticsearch")]),s._v(" "),a("ul",[a("li",[s._v("下载Elasticsearch6.2.2的zip包，并解压到指定目录，下载地址："),a("a",{attrs:{href:"https://www.elastic.co/cn/downloads/past-releases/elasticsearch-6-2-2",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.elastic.co/cn/downloads/past-releases/elasticsearch-6-2-2"),a("OutboundLink")],1)])]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/mall/arch_screen_25.png",alt:""}})]),s._v(" "),a("ul",[a("li",[s._v("运行bin目录下的elasticsearch.bat启动Elasticsearch")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/mall/arch_screen_27.png",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"修改启动参数将信息存储到elasticsearch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改启动参数将信息存储到elasticsearch"}},[s._v("#")]),s._v(" 修改启动参数将信息存储到Elasticsearch")]),s._v(" "),a("ul",[a("li",[s._v("使用以下命令运行，就可以把跟踪信息存储到Elasticsearch里面去了，重新启动也不会丢失；")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# STORAGE_TYPE：表示存储类型 ES_HOSTS：表示ES的访问地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("java")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-jar")]),s._v(" zipkin-server-2.12.9-exec.jar "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--STORAGE_TYPE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("elasticsearch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--ES_HOSTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("localhost:9200 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("之后需要重新启动user-service和ribbon-service才能生效，重启后多次调用ribbon-service的接口"),a("a",{attrs:{href:"http://localhost:8301/user/1",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://localhost:8301/user/1"),a("OutboundLink")],1),s._v("；")])]),s._v(" "),a("li",[a("p",[s._v("如果安装了Elasticsearch的可视化工具Kibana的话，可以看到里面已经存储了跟踪信息：")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/mall/springcloud_sleuth_05.png",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"更多启动参数参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更多启动参数参考"}},[s._v("#")]),s._v(" 更多启动参数参考")]),s._v(" "),a("p",[s._v("https://github.com/openzipkin/zipkin/tree/master/zipkin-server#elasticsearch-storage")]),s._v(" "),a("h2",{attrs:{id:"使用到的模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用到的模块"}},[s._v("#")]),s._v(" 使用到的模块")]),s._v(" "),a("div",{staticClass:"language-lua line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-lua"}},[a("code",[s._v("springcloud"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("learning\n├── eureka"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("server "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- eureka注册中心")]),s._v("\n├── user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("service "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 提供User对象CRUD接口的服务")]),s._v("\n└── ribbon"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("service "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- ribbon服务调用测试服务")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"项目源码地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目源码地址"}},[s._v("#")]),s._v(" 项目源码地址")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/macrozheng/springcloud-learning",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/macrozheng/springcloud-learning"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"公众号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#公众号"}},[s._v("#")]),s._v(" 公众号")]),s._v(" "),a("p",[a("img",{attrs:{src:"http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/banner/qrcode_for_macrozheng_258.jpg",alt:"公众号图片"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);