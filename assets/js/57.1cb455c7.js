(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{393:function(a,v,t){"use strict";t.r(v);var _=t(4),s=Object(_.a)({},(function(){var a=this,v=a._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h2",{attrs:{id:"java是如何实现一次编写、到处运行的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java是如何实现一次编写、到处运行的"}},[a._v("#")]),a._v(" Java是如何实现一次编写、到处运行的？")]),a._v(" "),v("p",[a._v("是通过Java虚拟机实现的。Java编译器会把Java代码编译成与平台无关的字节码，不同平台有不同的Java虚拟机，Java虚拟机会将字节码翻译成对应平台的机器码，这样就实现了一次编写、到处运行。")]),a._v(" "),v("h2",{attrs:{id:"java虚拟机的内存结构是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java虚拟机的内存结构是什么"}},[a._v("#")]),a._v(" Java虚拟机的内存结构是什么？")]),a._v(" "),v("p",[a._v("Java虚拟机的内存主要包括五个部分，分别是"),v("strong",[a._v("Java堆、虚拟机栈、本地方法栈、程序计数器、方法区")]),a._v("。其中Java堆、方法区是线程共享的，而虚拟机栈、本地方法栈、程序计数器是线程独立的。")]),a._v(" "),v("p",[a._v("Java堆存放的是对象实例，也是垃圾回收的主要区域。")]),a._v(" "),v("p",[a._v("方法每次被调用时，都会创建一个虚拟机栈帧，栈帧内存放了局部变量，虚拟机栈则用来存放栈帧。")]),a._v(" "),v("p",[a._v("本地方法栈和虚拟机栈，不过针对的是本地方法。")]),a._v(" "),v("p",[a._v("程序计数器用来记录当前线程执行到的字节码的地址。")]),a._v(" "),v("p",[a._v("方法区用来存放类加载后的类型信息、静态变量、常量等。")]),a._v(" "),v("h2",{attrs:{id:"什么是内存泄露和内存溢出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是内存泄露和内存溢出"}},[a._v("#")]),a._v(" 什么是内存泄露和内存溢出？")]),a._v(" "),v("p",[a._v("内存泄露指的是申请的内存无法被释放。")]),a._v(" "),v("p",[a._v("内存溢出指的是申请的内存超过了可用容量。")])])}),[],!1,null,null,null);v.default=s.exports}}]);